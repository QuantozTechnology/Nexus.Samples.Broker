@page
@model Nexus.Samples.Broker.Pages.Account.InfoModel
@{
    ViewData["Title"] = "Get Info";
}

<div class="page">
    <div class="page__content">
        <div class="container">
            <div class="row">
                <div class="col">
                    <h1>Get Info</h1>

                    <form method="get" class="form frends-form create">
                        <div class="form__group">
                            <label class="form__label" asp-for="Email">Email</label>

                            <input asp-for="Email" class="form__control" placeholder="@Resources.AccountPages.AccountDeletePlaceholderEmail" />

                            <div class="form__error">
                                <span asp-validation-for="Email"></span>
                            </div>
                        </div>

                        @if (Model.SuccessfullyProcessRequest.HasValue)
                        {
                            if (Model.SuccessfullyProcessRequest.Value)
                            {
                                <p>Email has been sent.</p>
                            }
                            else
                            {
                                <p>Unexpected error occured</p>
                            }
                        }

                        <button type="submit" class="form__submit btn btn-brand-color">
                            Get Info
                        </button>
                    </form>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <h2>Transactions</h2>
                    @if (Model.Transactions.Length > 0)
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered">
                                <thead class="thead-light">
                                    <tr>
                                        <th>
                                            Date
                                        </th>
                                        <th>Code</th>
                                        <th>Type</th>
                                        <th>Crypto</th>
                                        <th>Amount</th>
                                        <th>Value</th>
                                        <th>Currency</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Transactions)
                                    {
                                        <tr>
                                            <td>
                                                @item.Created
                                            </td>
                                            <td>@item.TransactionCode</td>
                                            <td>@item.Type</td>
                                            <td>@item.CryptoCurrencyCode</td>
                                            <td>@item.CryptoAmount</td>
                                            <td>@item.Payout?.ToString("F2")</td>
                                            <td>@item.CurrencyCode</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else if (Model.Email != null && Model.Transactions.Length == 0)
                    {
                        <p>No transactions to show.</p>
                    }

                </div>
            </div>
        </div>
    </div>
</div>
