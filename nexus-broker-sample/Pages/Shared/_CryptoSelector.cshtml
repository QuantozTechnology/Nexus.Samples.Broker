@model CryptoSelectorViewModel
@inject SupportedCryptoHelper SupportCryptoHelper

@{
    string route = Html.GetActiveCrypto();
    var crypto = Html.GetActiveCrypto();
    var supportedCryptos = SupportCryptoHelper.GetAllSupportedCryptos();
    var supportedCrypto = SupportCryptoHelper.GetSupportedCryptoFromRoute(crypto);
    var cryptoName = supportedCrypto.Name;
    var cryptoCode = supportedCrypto.Crypto;
}

<div>
    <div class="form__group mb-3">
        <label class="form__label" for="crypto">@Resources.Site.SelectCrypto</label>

        <form class="form__select select--crypto" method="get">
            <select asp-for="Crypto" name="crypto" id="crypto">
                @foreach (var displayedCrypto in supportedCryptos)
                {
                    <option value="@displayedCrypto.Route">@displayedCrypto.Name</option>
                }
            </select>
            <input hidden name="newaction" value="@Model.Action" />
        </form>
    </div>

    @if (Model.ShowPrices)
    {
        <div class="normal mb-2">@Resources.BuyPages.BuyingPrice <span class="buyPrice" data-crypto="@cryptoCode">...</span> @(Model.Currency)/@(cryptoName)</div>
        <div class="normal">@Resources.SellPages.SellingPrice <span class="sellPrice" data-crypto="@cryptoCode">...</span> @(Model.Currency)/@(cryptoName)</div>
    }
</div>

